---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    timeout: 10m
    remediation:
      retries: 3
  upgrade:
    timeout: 10m
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    # - name: intel-device-plugin-gpu
    #   namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.10.5@sha256:54340f53459858156896d5758a6eaa2cea9c95ff95c3c966f2fff1307e31660c
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: https://jellyfin.nimbus.casa
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              # limits:
              #   gpu.intel.com/i915: 1
              # memory: 8Gi
    defaultPodOptions:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: good-qsync
      #           operator: In
      #           values:
      #           - yes
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: { type: RuntimeDefault }
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: jellyfin
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.30.22
        ports:
          http:
            port: 8096
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.nimbus.casa
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        className: internal
        hosts:
          - host: "jellyfin.nimbus.casa"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      app-ts:
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        className: tailscale-nginx
        hosts:
          - host: "jellyfin.nimbus.casa"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /config
      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache
      media:
        enabled: true
        existingClaim: mediastore-smb-pvc
        globalMounts:
          - path: /mediastore
