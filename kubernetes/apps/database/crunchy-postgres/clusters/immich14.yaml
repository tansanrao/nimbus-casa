---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name immich14
spec:
  postgresVersion: 14
  image: "ghcr.io/chkpwd/cdpgvecto.rs:14-v0.2.0"

  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "postgres"

  service:
    type: LoadBalancer
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: immich14.nimbus.casa
        lbipam.cilium.io/ips: 192.168.107.31

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        shared_preload_libraries: "vectors.so"
        search_path: '"$user", public, vectors'
        max_wal_size: 2GB
        synchronous_commit: "on"
        pg_hba:
          - hostnossl all all 10.69.0.0/16 md5
          - hostssl all all all md5

  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replica 2
      dataVolumeClaimSpec:
        storageClassName: ceph-rbd
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres

  users:
    # Superuser
    - name: postgres
      databases:
        - postgres
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    # Applications
    - name: immich
      databases:
        - immich
      password:
        type: AlphaNumeric

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-postgres-secret
      global: &backupFlag
        compress-type: "bz2"
        compress-level: "9"
        # Minio S3
        repo1-bundle: "y"
        repo1-block: "y"
        repo1-path: /immich14
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        repo1-s3-uri-style: path
        repo1-storage-verify-tls: "n"
        # Cloudflare R2
        repo2-block: "y"
        repo2-bundle: "y"
        repo2-path: /immich14
        repo2-retention-full: "7" # days
        repo2-retention-full-type: time
        repo2-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1 # Minio S3
          s3:
            bucket: "crunchy-pgo"
            endpoint: "192.168.101.10:9000"
            region: "us-east-1"
          schedules:
            full: "0 1 * * 0" # Sunday at 01:00
            differential: "0 1 * * 1-6" # Mon-Sat at 01:00
            incremental: "0 2-23 * * *" # Every hour except 01:00
        - name: repo2 # R2
          s3: &r2
            bucket: "crunchy-pgo"
            endpoint: "c6b94fac3912990d5ba196ac12a2f2ed.r2.cloudflarestorage.com"
            region: "us-east-1"
          schedules:
            full: "0 2 * * 0" # Sunday at 02:00
            incremental: "0 2 * * 1-6" # Mon-Sat at 02:00

  # dataSource:
  #   pgbackrest:
  #     stanza: "db"
  #     configuration: *backupConfig
  #     global: *backupFlag
  #     repo:
  #       name: repo2
  #       s3: *r2

  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M
