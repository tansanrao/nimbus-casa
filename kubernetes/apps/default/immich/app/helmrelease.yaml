---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      server:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.130.3@sha256:eb5e28de53461e9c328d86fdccfddde579cf9b10ebb3105a2a194115b79ad8a9
            envFrom: &env
              - secretRef:
                  name: immich-secret
              - secretRef:
                  name: immich-db-secret
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8192Mi
      machine-learning:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.130.3@sha256:454a6a361d473e699bbccebee488b3886048eed91e2058657b9ba398ce917a77
            envFrom: *env
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8192Mi
      redis:
        containers:
          app:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.4.2@sha256:bd41d55aae1ecff61b2fafd0d66761223fe94a60373eb6bb781cfbb570a84079
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      server:
        controller: server
        ports:
          http:
            port: 2283
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      redis:
        controller: redis
        ports:
          redis:
            port: 6379
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.nimbus.casa
        hosts:
          - host: "photos.nimbus.casa"
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
    persistence:
      matplotlib:
        type: emptyDir
        advancedMounts:
          server:
            app:
              - path: /.config/matplotlib
      library:
        existingClaim: immich-smb-pvc
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload
      geocoding-dump:
        type: emptyDir
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        type: emptyDir
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/.transformers_cache
      model-cache:
        type: emptyDir
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
